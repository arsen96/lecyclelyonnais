#!/bin/bash

# üö® CORRECTION URGENTE S√âCURIT√â POSTGRESQL
# lecycle_user d√©tect√© comme SUPERUSER = DANGER CRITIQUE !

echo "üö® CORRECTION URGENTE S√âCURIT√â POSTGRESQL"
echo "========================================"
echo ""
echo "PROBL√àME D√âTECT√â : lecycle_user = SUPERUSER"
echo "RISQUE : Contr√¥le total PostgreSQL en cas d'injection SQL"
echo ""

# ===============================================
# PHASE 1 : SAUVEGARDE D'URGENCE
# ===============================================

echo "üì¶ PHASE 1 : Sauvegarde d'urgence avant correction"
echo "------------------------------------------------"

BACKUP_DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="backup_avant_correction_securite_${BACKUP_DATE}.sql"

echo "Cr√©ation sauvegarde : $BACKUP_FILE"
docker exec lecyclelyonnais-postgres-1 pg_dump -U lecycle_user lecycle_db > "$BACKUP_FILE"

if [ $? -eq 0 ]; then
    echo "‚úÖ Sauvegarde cr√©√©e avec succ√®s"
    gzip "$BACKUP_FILE"
    echo "‚úÖ Sauvegarde compress√©e : ${BACKUP_FILE}.gz"
else
    echo "‚ùå ERREUR : Impossible de cr√©er la sauvegarde"
    echo "‚ùå ARR√äT : Ne pas continuer sans sauvegarde"
    exit 1
fi

# ===============================================
# PHASE 2 : CR√âATION UTILISATEUR S√âCURIS√â
# ===============================================

echo ""
echo "üîê PHASE 2 : Cr√©ation utilisateur application s√©curis√©"
echo "----------------------------------------------------"

# G√©n√©rer mot de passe fort
NEW_APP_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
echo "Nouveau mot de passe g√©n√©r√© : $NEW_APP_PASSWORD"

# Script SQL pour cr√©er utilisateur s√©curis√©
cat > fix_security.sql << EOF
-- 1. Cr√©er nouvel utilisateur application avec privil√®ges minimums
CREATE USER lecycle_app WITH 
    PASSWORD '$NEW_APP_PASSWORD'
    NOCREATEDB 
    NOCREATEROLE 
    NOSUPERUSER
    NOINHERIT
    LOGIN;

-- 2. Accorder connexion √† la base
GRANT CONNECT ON DATABASE lecycle_db TO lecycle_app;

-- 3. Accorder usage du sch√©ma public
GRANT USAGE ON SCHEMA public TO lecycle_app;

-- 4. Accorder droits sur tables existantes
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO lecycle_app;

-- 5. Accorder droits sur s√©quences (pour auto-increment)
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO lecycle_app;

-- 6. Accorder droits sur futures tables
ALTER DEFAULT PRIVILEGES IN SCHEMA public 
    GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO lecycle_app;

ALTER DEFAULT PRIVILEGES IN SCHEMA public 
    GRANT USAGE, SELECT ON SEQUENCES TO lecycle_app;

-- 7. V√©rification des droits cr√©√©s
\echo 'Nouvel utilisateur lecycle_app cr√©√© avec privil√®ges limit√©s'
\du lecycle_app

-- 8. Test des restrictions
\echo 'Test des restrictions (doivent √©chouer) :'
\set ON_ERROR_STOP off
CREATE DATABASE test_hack_lecycle_app;
CREATE USER test_hacker;
\set ON_ERROR_STOP on
\echo 'Fin des tests - les erreurs ci-dessus sont NORMALES et attendues'
EOF

echo "Ex√©cution du script de s√©curisation..."
docker exec -i lecyclelyonnais-postgres-1 psql -U lecycle_user -d lecycle_db < fix_security.sql

if [ $? -eq 0 ]; then
    echo "‚úÖ Utilisateur lecycle_app cr√©√© avec succ√®s"
else
    echo "‚ùå ERREUR lors de la cr√©ation utilisateur s√©curis√©"
    exit 1
fi

# ===============================================
# PHASE 3 : MISE √Ä JOUR CONFIGURATION
# ===============================================

echo ""
echo "‚öôÔ∏è PHASE 3 : Mise √† jour configuration Docker"
echo "--------------------------------------------"

# Sauvegarde ancienne config
cp docker-compose.yml docker-compose-backup-$(date +%Y%m%d_%H%M%S).yml

# Cr√©er nouvelle config avec utilisateur s√©curis√©
sed "s|lecycle_user:Testtest96-|lecycle_app:$NEW_APP_PASSWORD|g" docker-compose.yml > docker-compose-new.yml

echo "Comparaison des configurations :"
echo "AVANT :"
grep -n "DATABASE_URL\|DB_USER\|DB_PASSWORD" docker-compose.yml
echo ""
echo "APR√àS :"
grep -n "DATABASE_URL\|DB_USER\|DB_PASSWORD" docker-compose-new.yml

# ===============================================
# PHASE 4 : TESTS DE S√âCURIT√â
# ===============================================

echo ""
echo "üß™ PHASE 4 : Tests de s√©curit√© nouvel utilisateur"
echo "-----------------------------------------------"

cat > test_security_lecycle_app.sql << EOF
-- Tests de s√©curit√© avec nouvel utilisateur lecycle_app
-- Ces commandes DOIVENT √©chouer (c'est normal et souhait√©)

\echo 'Test 1: Tentative cr√©ation base (doit √©chouer)'
\set ON_ERROR_STOP off
CREATE DATABASE evil_db;
\set ON_ERROR_STOP on

\echo 'Test 2: Tentative cr√©ation utilisateur (doit √©chouer)'
\set ON_ERROR_STOP off
CREATE USER hacker WITH PASSWORD 'hack';
\set ON_ERROR_STOP on

\echo 'Test 3: Tentative escalade privil√®ges (doit √©chouer)'
\set ON_ERROR_STOP off
ALTER USER lecycle_app SUPERUSER;
\set ON_ERROR_STOP on

\echo 'Test 4: Tentative suppression table (doit √©chouer)'
\set ON_ERROR_STOP off
DROP TABLE client;
\set ON_ERROR_STOP on

\echo 'Test 5: Op√©rations normales (doit marcher)'
\set ON_ERROR_STOP on
SELECT COUNT(*) FROM client;
INSERT INTO client (first_name, last_name, email, password, company_id) 
VALUES ('Test', 'Security', 'test@security.com', 'hashedpw', 1);
SELECT id FROM client WHERE email = 'test@security.com';
DELETE FROM client WHERE email = 'test@security.com';

\echo 'Tests termin√©s - Les erreurs ci-dessus pour tests 1-4 sont NORMALES'
\echo 'Seul le test 5 doit r√©ussir compl√®tement'
EOF

echo "Test des restrictions du nouvel utilisateur..."
docker exec -i lecyclelyonnais-postgres-1 psql -U lecycle_app -d lecycle_db < test_security_lecycle_app.sql

# ===============================================
# PHASE 5 : PROC√âDURE DE MIGRATION
# ===============================================

echo ""
echo "üîÑ PHASE 5 : Proc√©dure de migration s√©curis√©e"
echo "============================================"
echo ""
echo "Configuration pr√™te ! √âtapes de migration :"
echo ""
echo "1. ARR√äT APPLICATION :"
echo "   docker-compose down"
echo ""
echo "2. REMPLACEMENT CONFIG :"
echo "   mv docker-compose.yml docker-compose-old.yml"
echo "   mv docker-compose-new.yml docker-compose.yml"
echo ""
echo "3. RED√âMARRAGE :"
echo "   docker-compose up -d"
echo ""
echo "4. V√âRIFICATION FONCTIONNEMENT :"
echo "   curl -I https://lecyclelyonnais.fr"
echo "   docker logs lecyclelyonnais-backend-1"
echo ""
echo "5. SI TOUT FONCTIONNE - R√©voquer ancien utilisateur :"
echo "   docker exec -it lecyclelyonnais-postgres-1 psql -U lecycle_user -d lecycle_db"
echo "   # ALTER USER lecycle_user NOSUPERUSER NOCREATEDB NOCREATEROLE;"
echo ""
echo "üìã INFORMATIONS IMPORTANTES :"
echo "============================"
echo "Nouvel utilisateur : lecycle_app"
echo "Nouveau mot de passe : $NEW_APP_PASSWORD"
echo "Sauvegarde : ${BACKUP_FILE}.gz"
echo ""
echo "‚ö†Ô∏è  CONSERVEZ PR√âCIEUSEMENT LE NOUVEAU MOT DE PASSE !"
echo ""
echo "üéØ B√âN√âFICES S√âCURIT√â :"
echo "====================="
echo "‚úÖ Fini les privil√®ges super-utilisateur"
echo "‚úÖ Injection SQL limit√©e aux tables app"
echo "‚úÖ Impossible de cr√©er utilisateurs/bases"
echo "‚úÖ Principe moindre privil√®ge respect√©"
echo "‚úÖ S√©paration admin/application"

# ===============================================
# PHASE 6 : CONFIGURATION BACKUP S√âCURIS√â
# ===============================================

echo ""
echo "üíæ PHASE 6 : Configuration backup s√©curis√©"
echo "========================================="

cat > backup-secure-new.sh << 'EOFBACKUP'
#!/bin/bash

# Script de sauvegarde avec nouvel utilisateur s√©curis√©
DATE=$(date +%Y%m%d_%H%M%S)
DB_NAME="lecycle_db"
DB_USER="lecycle_app"
DB_HOST="localhost"
DB_PORT="5432"
PROJECT_DIR="/home/arsen/projet/lecyclelyonnais"
BACKUP_DIR="$PROJECT_DIR/backups"
BACKUP_FILE="$BACKUP_DIR/backup_${DB_NAME}_${DATE}.sql"

# Cr√©er dossier backup
mkdir -p "$BACKUP_DIR"

# Utiliser fichier .pgpass pour s√©curit√©
if [ ! -f ~/.pgpass ]; then
    echo "ERREUR: Fichier ~/.pgpass manquant"
    echo "Cr√©ez-le avec :"
    echo "echo 'localhost:5432:lecycle_db:lecycle_app:NOUVEAU_MOT_DE_PASSE' > ~/.pgpass"
    echo "chmod 600 ~/.pgpass"
    exit 1
fi

echo "Sauvegarde base $DB_NAME avec utilisateur s√©curis√©..."

# Dump s√©curis√©
docker exec lecyclelyonnais-postgres-1 pg_dump -h localhost -U $DB_USER -d $DB_NAME > "$BACKUP_FILE"

if [ $? -eq 0 ]; then
    echo "‚úÖ Sauvegarde r√©ussie : $BACKUP_FILE"
    gzip "$BACKUP_FILE"
    chmod 600 "${BACKUP_FILE}.gz"
    
    # Nettoyage
    find "$BACKUP_DIR" -name "backup_${DB_NAME}_*.sql.gz" -mtime +7 -delete
    echo "‚úÖ Sauvegarde s√©curis√©e termin√©e"
else
    echo "‚ùå Erreur sauvegarde"
    exit 1
fi
EOFBACKUP

chmod +x backup-secure-new.sh

echo ""
echo "Nouveau script backup cr√©√© : backup-secure-new.sh"
echo "Configurez ~/.pgpass avec :"
echo "echo 'localhost:5432:lecycle_db:lecycle_app:$NEW_APP_PASSWORD' > ~/.pgpass"
echo "chmod 600 ~/.pgpass"

echo ""
echo "üèÅ CORRECTION S√âCURIS√âE PR√äTE !"
echo "============================="
echo ""
echo "‚ö†Ô∏è  PROCHAINES √âTAPES OBLIGATOIRES :"
echo "1. Sauvegarder le nouveau mot de passe : $NEW_APP_PASSWORD"
echo "2. Ex√©cuter la migration (docker-compose down/up)"
echo "3. Tester le fonctionnement de l'application"
echo "4. Configurer ~/.pgpass pour les backups"
echo "5. R√©voquer les privil√®ges de lecycle_user une fois migration OK"
echo ""
echo "Voulez-vous proc√©der √† la migration maintenant ? (y/N)"
