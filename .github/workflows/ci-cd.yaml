name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/*
    paths-ignore:
      - '**/*.md'
      - '**/*.yaml'
      - '**/*.json'

  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.yaml'
      - '**/*.json'

jobs:
  # ===================================
  # JOB 1: Tests API avec Newman/Postman
  # ===================================
  test-api:
    name: 🔗 Tests API
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Récupérer le code
        uses: actions/checkout@v4
        
      - name: 🏗️ Installer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: 📦 Installer les dépendances
        run: npm ci
        
      - name: 🔄 Sync Postman collections
        run: npm run postman:sync
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        
      - name: 🚀 Démarrer l'application
        run: |
          npm start &
          sleep 15
        env:
          NODE_ENV: test
          PORT: ${{ secrets.PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          
      - name: 🧪 Test - Authentification
        run: npm run test:api:auth
        continue-on-error: false
        
      - name: 🧪 Test - Techniciens
        run: npm run test:api:technicians
        continue-on-error: true
        
      - name: 🧪 Test - Companies
        run: npm run test:api:company
        continue-on-error: true
        
      - name: 🧪 Test - Bicycles
        run: npm run test:api:bicycle
        continue-on-error: true
        
      - name: 🧪 Test - Zones
        run: npm run test:api:zones
        continue-on-error: true
        
      - name: 🧪 Test - Interventions
        run: npm run test:api:intervention
        continue-on-error: true
        
  # ===================================  
  # JOB 2: Tests unitaires (si vous en avez)
  # ===================================
  test-unit:
    name: 🧪 Tests Unitaires
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Récupérer le code
        uses: actions/checkout@v4
        
      - name: 🏗️ Installer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: 📦 Installer les dépendances
        run: npm ci
        
      - name: 🧪 Lancer les tests unitaires
        run: npm run test:unit
        continue-on-error: true

  # ===================================
  # JOB 3: Résultats et notifications
  # ===================================
  results:
    name: 📊 Résultats
    runs-on: ubuntu-latest
    needs: [test-api, test-unit]
    if: always()  # Toujours exécuter même si les tests échouent
    
    steps:
      - name: 📊 Afficher les résultats
        run: |
          echo "==================================="
          echo "📊 RÉSULTATS DES TESTS"
          echo "==================================="
          echo "🔗 Tests API: ${{ needs.test-api.result }}"
          echo "🧪 Tests unitaires: ${{ needs.test-unit.result }}"
          echo "==================================="
          
          if [[ "${{ needs.test-api.result }}" == "success" ]]; then
            echo "✅ Tests API: SUCCÈS"
          else
            echo "❌ Tests API: ÉCHEC"
          fi
          
          if [[ "${{ needs.test-unit.result }}" == "success" ]]; then
            echo "✅ Tests unitaires: SUCCÈS"
          else
            echo "❌ Tests unitaires: ÉCHEC"
          fi
          
      - name: 🚨 Échec critique si auth échoue
        if: needs.test-api.result == 'failure'
        run: |
          echo "🚨 ÉCHEC CRITIQUE: Les tests d'authentification ont échoué!"
          echo "Le déploiement ne peut pas continuer."
          exit 1